1. Show two ways to declare a one-dimensional array of 12 doubles.

way 1:

double show1[] = {2.3, 1.2, 5.5, 3.2, 1.5}

way 2:

double show2[] = new show2[5];

show2[0] = 2.3;
show2[1] = 1.2;
show2[2] = 5.5;
show2[3] = 3.2;
show2[4] = 1.5;


2. Show how to initialize a one-dimensional array of integers to the values 1 through 5.

int onedimesional[] = {1, 2, 3, 4, 5};


3. Write a program that uses an array to find the average of 10 double values. Use any 10 values you like.

double Three[] = {1.3, 2.4, 3.4, 4.4, 5.6, 6.7, 2.3, 1.1, 9.8, 0.5};

double q = 0;

for(double i; Three[])) {
    q += i;
    
}

average = q / 10;



4. Change the sort in Try This 5-1 so that it sorts an array of strings. Demonstrate that it works.

/*
   Chapter 5 Self-Test Question 4
   Demonstrate the Bubble sort.
*/

class NewBubble {
  public static void main(String args[]) {
    String words[] = {"Saffys Angel", "Caddy Ever After", "Permanent Rose", "Forever Rose", "Indigos Star", "Caddys World"};
    int a, b;
    String t;
    int size;

    size = 6; // number of elements to sort

    // display original array
    System.out.print("Original array is:");
    for(String x : words) System.out.print(" " + x);
      System.out.println();

    // This is the bubble sort.
    for(a=1; a < size; a++)
      for(b=size-1; b >= a; b--) {
        if(words[b-1].compareTo(words[b]) > 0) { // if out of order
          // exchange elements
          t = words[b-1];
          words[b-1] = words[b];
          words[b] = t;
        }
      }

    // display sorted array
    System.out.print("Sorted array is:");
    for(String x : words)
      System.out.print(" " + x);
    System.out.println();
  }
}




5. What is the difference between the String methods indexOf( ) and lastIndexOf( )?

indexOf locates the first instance of the phrase between the brackets, whereas lastIndexOf locates the last
instance (one might say it starts from the end of the string whereas indexof starts at the beginning)


6. Since all strings are objects of type String, show how you can call the length( ) and charAt( )
methods on this string literal: "I like Java".

"I like Java".length()
"I like Java".charAt(0)


7. Expanding on the Encode cipher class, modify it so that it uses an eight-character string as the key.

// Use XOR to encode and decode a message.
class NewEncode {
  public static void main(String args[]) {
    String msg = "This is a test";
    String encmsg = "";
    String decmsg = "";
    String key = "abcdefgh";

    System.out.print("Original message: ");
    System.out.println(msg);

    // encode the message
    int j = 0;
    for(int i=0; i < msg.length(); i++)
      encmsg = encmsg + (char) (msg.charAt(i) ^ key.charAt(j));
      j++;

    if(j == 8) j = 0;

    System.out.print("Encoded message: ");
    System.out.println(encmsg);

    // decode the message
    j = 0;
    for(int i=0; i < msg.length(); i++)
      decmsg = decmsg + (char) (encmsg.charAt(i) ^ key.charAt(j));
      j++;

    if(j == 8) j = 0;

    System.out.print("Decoded message: ");
    System.out.println(decmsg);
  }
}




8. Can the bitwise operators be applied to the double type?

No, because the results would make no logical sense.

9. Show how this sequence can be rewritten using the ? operator.
    if(x < 0) y = 10;
    else y = 20;

x < 0 ? y = 10 : y = 20;


10. In the following fragment, is the & a bitwise or logical operator? Why?
    boolean a, b;
    // ...
    if(a & b) ...

It is a logical operator, as the bitwise operator would not give a useful answer in this case.

11. Is it an error to overrun the end of an array? Is it an error to index an array with a negative value?

It is an error to overrun the end of an array, but not to index an array with a negative value.

12. What is the unsigned right-shift operator?

It adds 0s to the left side of a number.


13. Rewrite the MinMax class shown earlier in this chapter so that it uses a for-each style for loop.

class NewMinMax {
  public static void main(String args[]) {
    int nums[] = new int[10];
    int min, max;

    nums[0] = 99;
    nums[1] = -10;
    nums[2] = 100123;
    nums[3] = 18;
    nums[4] = -978;
    nums[5] = 5623;
    nums[6] = 463;
    nums[7] = -9;
    nums[8] = 287;
    nums[9] = 49;

    min = max = nums[0];
    for(int i: nums) {
      if(i < min) min = i;
      if(i > max) max = i;
    }
    System.out.println("min and max: " + min + " " + max);
  }
}


14. Can the for loops that perform sorting in the Bubble class shown in Try This 5-1 be converted into for-each style loops? If not, why not?

Yes, they can!

15. Can a String control a switch statement?

Yes, but it is not recommended.
