1. Given this fragment,
       class X {
         private int count;

is the following fragment correct?

       class Y {
         public static void main(String args[]) {
           X ob = new X();
           ob.count = 10;

No - only a function within ob can access the private variable - it can't be altered 
unless the object itself alters it.
￼￼￼￼￼￼￼
2. An access modifier must __________ a member’s declaration.

precede




3. The complement of a queue is a stack. It uses first-in, last-out accessing and is often likened to a stack of plates. The first plate put on the table is the last plate used. Create a stack
class called Stack that can hold characters. Call the methods that access the stack push( ) and pop( ). Allow the user to specify the size of the stack when it is created. Keep all other members of the Stack class private. (Hint: You can use the Queue class as a model; just change the way the data is accessed.)

class Stack {
    private char q[];
    private int putloc, getloc;

    Stack(int size) {
        q = new char[size];
        getloc = size - 1;
    }

    void push(char value) {
        if(getloc == q.length) {
            System.out.println("Stack is stuffed!");
            return;
        }
        q[getloc++] = value;
    }

    char pop(char value) {
        if(getloc < 0) {
            System.out.println("Stack is empty!");
            return (char) 0;
        }
        return q[getloc--];

    }
}


4. Given this class,

    class Test {
      int a;
      Test(int i) { a = i; }
    }

write a method called swap( ) that exchanges the contents of the objects referred to by two Test object references.

    void swap(Test ob1, Test ob2) {
        int holdA = ob1.a;
        ob1.a = ob2.a;
        ob2.a = holdA;
    }



5. Is the following fragment correct?

    class X {
      int meth(int a, int b) { ... }
      String meth(int a, int b) { ... }

Yes, the following fragment is correct. It doesn't matter if a String type
method has int variables (after all, the method may convert them!)


6. Write a recursive method that displays the contents of a string backwards.


7. If all objects of a class need to share the same variable, how must you declare that variable?


8. Why might you need to use a static block?


9. What is an inner class?


10. To make a member accessible by only other members of its class, what access modifier must be used?


11. The name of a method plus its parameter list constitutes the method’s _______________.


12. An int argument is passed to a method by using call-by-_______________.


13. Create a varargs method called sum( ) that sums the int values passed to it. Have it return the result. Demonstrate its use.


14. Can a varargs method be overloaded?


15. Show an example of an overloaded varargs method that is ambiguous.
